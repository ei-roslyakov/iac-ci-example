name: Tests

on:
  push:

env:
  TF_VERSION : "1.2.7"
  TG_VERSION : "v0.38.7"

jobs:
  get_changed_folder:
    runs-on: ubuntu-latest
    outputs:
      dir: ${{ steps.get_folder.outputs.dirs }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      
      - name: Run changed-files with dir_names
        id: changed-files-dir-names
        uses: tj-actions/changed-files@v25
        with:
          dir_names: "true"
          json: "true"

      - uses: actions/setup-python@v2
      - name: get_data_to_invoke_plan
        id: get_folder
        working-directory: ".github"
        run: |
          echo "::set-output name=dirs::$(python ./get_changed_folder.py --folders=${{ steps.changed-files-dir-names.outputs.modified_files }})"

  make_plan:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    continue-on-error: false
    needs: [get_changed_folder]
    strategy:
      matrix:
        dir: ${{fromJSON(needs.get_changed_folder.outputs.dir)}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Installing TF
        run: |
          sudo apt install zip
          wget --quiet https://releases.hashicorp.com/terraform/${{ env.TF_VERSION }}/terraform_${{ env.TF_VERSION }}_linux_amd64.zip
          unzip terraform_${{ env.TF_VERSION }}_linux_amd64.zip
          sudo mv terraform /usr/bin

      - name: Installing TG
        run: |
          wget --quiet https://github.com/gruntwork-io/terragrunt/releases/download/${{ env.TG_VERSION }}/terragrunt_linux_amd64
          sudo mv terragrunt_linux_amd64 /usr/local/bin/terragrunt
          sudo chmod +x /usr/local/bin/terragrunt

      - name: Print Version
        run: |
          terraform --version
          terragrunt --version

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-region: us-east-2
          role-to-assume: arn:aws:iam::948691256895:role/gh-action
          role-session-name: GithubActionsSession

      # - name: Install SSH Key
      #   uses: shimataro/ssh-key-action@v2
      #   with:
      #     key: ${{ secrets.SSH_KEY }}
      #     known_hosts: ${{ secrets.KNOWN_HOSTS_OF_GITHUB }}
      #     if_key_exists: ignore
      - name: Write SSH keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H github.com > ~/.ssh/known_hosts

      - name: Run Plan
        working-directory: ${{ matrix.dir }}
        run: |
          terragrunt run-all plan 
